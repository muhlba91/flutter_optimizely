---
name: Verify

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

jobs:
  analyze:
    runs-on: ubuntu-latest
    name: Flutter Analyze

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      - name: Pub Get
        run: |
          flutter pub get

      - name: Analyze
        run: |
          flutter analyze --no-fatal-infos

      - name: Dart Code Metrics
        run: |
          dart run dart_code_metrics:metrics analyze lib

  test:
    runs-on: ubuntu-latest
    name: Flutter Test

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      - name: Pub Get
        run: |
          flutter pub get

      - name: Test
        run: |
          flutter test

  android:
    runs-on: ubuntu-latest
    name: "Android: Build Example"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      - name: Pub Get
        run: |
          flutter pub get

      - name: Build Example
        working-directory: example
        run: |
          flutter build -v appbundle

  ios:
    runs-on: macos-latest
    name: "iOS: Build Example"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
  
      - name: Pub Get
        run: |
          flutter pub get

      - name: Build Example
        working-directory: example
        run: |
          flutter build -v ios --no-codesign

  verify_publish:
    runs-on: ubuntu-latest
    name: Flutter Publish Verification

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      - name: Pub Get
        run: |
          flutter pub get

      - name: Publish Dry-Run
        run: |
          flutter pub publish --dry-run

      - name: Package Publisher Dry-Run
        uses: k-paxian/dart-package-publisher@v1.6
        with:
          accessToken: ${{ secrets.OAUTH_ACCESS_TOKEN }}
          refreshToken: ${{ secrets.OAUTH_REFRESH_TOKEN }}
          skipTests: true
          dryRunOnly: true

  release:
    runs-on: ubuntu-latest
    name: Release
    permissions:
      id-token: write
      contents: write
    if: github.ref == 'refs/heads/main' && !contains(github.event.head_commit.message, '[release]')
    needs:
      - analyze
      - test
      - android
      - ios
      - verify_publish
    strategy:
      max-parallel: 4
      matrix:
        node-version: ["16"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "${{ matrix.node-version }}"

      - name: Setup Git
        shell: bash
        run: |
          git config --local user.email "${{ github.action }}+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git fetch --tags
          git pull || true

      - name: Versioning and Changelog
        id: versioning
        shell: bash
        run: |
          npx standard-version -i release-CHANGELOG.md \
            --skip.commit \
            --skip.tag \
            --skip.bump
          npx standard-version
          TAG_NAME=`git describe --abbrev=0 --match "v*"`
          echo ::set-output name=tagName::$(echo ${TAG_NAME})
      - name: Push Git Tag
        shell: bash
        run: |
          git push --follow-tags origin ${{ github.ref_name }}

      - name: GitHub Release
        uses: ncipollo/release-action@v1
        with:
          bodyFile: release-CHANGELOG.md
          name: ${{ steps.versioning.outputs.tagName }}
          tag: ${{ steps.versioning.outputs.tagName }}
